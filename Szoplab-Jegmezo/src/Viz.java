//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Viz.java
//  @ Date : 2020. 03. 19.
//  @ Author : 
//
//


/*A viz osztaly felelossegeit valositja meg. */
public class Viz extends Tabla {
	/** Valtozok: */
	/**
	 * Az adott vizben, hany karakter van.
	 */
	private int karakterekVizben = 0;

	/** Fuggvenyek: */
	/**
	 * Ellenorzi, hogy a vizben levo jatekos dolgai kozott talalhato-e buvarruha es ennek megfeleloen jar el
	 */
	@Override
	public void allapotfrissites() {

		/* Aktualis metodus nevenek kiirasa debug / tesztek celjabol! */
		log("Most a <" + getClass() + "> Osztaly <" + new Throwable().getStackTrace()[0].getMethodName() + "> fuggvenye fut! ");

		if (karakterek.size() != 0) {
			boolean vanBuvarruha = false;
			Buvarruha buvarruha = new Buvarruha();

			for (Dolog d : karakterek.get(karakterekVizben).getDolgok()) {
				if (d.hasonlit(buvarruha)) {
					vanBuvarruha = true;
				}
			}

			if (!vanBuvarruha) {
				karakterek.get(karakterekVizben).hpNullazas();
			}
			else {
				karakterek.get(karakterekVizben).setMunka(karakterekVizben);
			}

			if (karakterek.size() > karakterekVizben + 1)
				karakterekVizben++;
		}
	}

	/**
	 * Karakter hozzaadasa a vizhez.
	 * @param k A karakter, melyet a viz atvett.
	 */
	@Override
	public void elfogad(Karakter k) {

		/* Aktualis metodus nevenek kiirasa debug / tesztek celjabol! */
		log("Most a <" + getClass() + "> Osztaly <" + new Throwable().getStackTrace()[0].getMethodName() + "> fuggvenye fut! ");

		super.elfogad(k);

		/* 0-ra allitja a lehetseges munkajanak szamat a karakternek, aki vizbe esett. */
		k.setMunka(0);
	}

	/**
	 * Karakter eltavolitasa a vizbol.
	 * @param k A karakter, melyet el szeretnenk tavolitani a vizbol.
	 */
	@Override
	public void eltavolit(Karakter k) {

		/* Aktualis metodus nevenek kiirasa debug / tesztek celjabol! */
		log("Most a <" + getClass() + "> Osztaly <" + new Throwable().getStackTrace()[0].getMethodName() + "> fuggvenye fut! ");

		if (karakterekVizben > 0)
			karakterekVizben--;

		/* A viz tabla karakterei kozul valo eltavolitasa. */
		karakterek.remove(k);
	}

	/**
	 * Iglu epitese (vizen nem lehetseges).
	 */
	@Override
	public void igluEpit() {
		/* Aktualis metodus nevenek kiirasa debug / tesztek celjabol! */
		log("Most a <" + getClass() + "> Osztaly <" + new Throwable().getStackTrace()[0].getMethodName() + "> fuggvenye fut! ");

		kiir("iglu_nem_epitheto", "output.txt");
	}

	/**
	 * Felulirja a getStabilitas fuggvenyt
	 * Ha veletlenul helyetelen veszunk fel uj tablat (viz es megse 0 a stabilitas),
	 * Akkor is helyesen kezeli a vizet (vizkent).
	 */
	@Override
	public int getStabilitas() {
		return 0;
	}
}
