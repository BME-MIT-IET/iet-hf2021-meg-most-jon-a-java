//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Jatek.java
//  @ Date : 2020. 03. 19.
//  @ Author : 
//
//


import java.beans.XMLDecoder;
import java.beans.XMLEncoder;
import java.io.*;

/**
 * A Jatek osztaly felelossegeit valositja meg.
 */
public class Jatek implements JatekVezerlo {

	/**
	 * A jegmezot szimbolizalo mezo.
	 */
	private Mezo mezo;

	/**
	 * Visszaadja a mezot, melyen a jatek zajlik.
	 * @return Mezo A mezo, melyen a jatek zajlik.
	 */
	public Mezo getMezo() {
		return mezo;
	}

	/**
	 * Beallitja a mezot, melyen a jatek zajlik.
	 * @param mezo A mezo, melyen a jatek zajlik.
	 */
	public void setMezo(Mezo mezo) {
		this.mezo = mezo;
	}

	/**
	 * Jatek letrehozasa
	 * @param file A fájl neve amiből a játék /pálya létrehozásához
	 * szükséges parancsokat olvassa be.
	 * @return játék /pálya létrehozás sikerességét adja vissza.
	 */
	public boolean jatekLetrehoz(String file) {

		/* Aktualis metodus nevenek kiirasa debug / tesztek celjabol! */
		log("Most a <" + getClass() + "> Osztaly <" + new Throwable().getStackTrace()[0].getMethodName() + "> fuggvenye fut! ");

		if(fparancsokbeolvas(file, this)){
			mezo.setAktualis_karakter(mezo.getKarakterek().get(0));
			return true;
		}
		return false;
	}


	//Jatekstart helyett?? grafikushoz
	public boolean jatekLep(){

		/* Aktualis metodus nevenek kiirasa debug / tesztek celjabol! */
		log("Most a <" + getClass() + "> Osztaly <" + new Throwable().getStackTrace()[0].getMethodName() + "> fuggvenye fut! ");

		mezo.kovetkezoLepes();
		//azt adja vissza hogy vege-e vagy se
		if(mezo.isNyerte() == null) return false;
		return true;
	}

	/**
	 * Jatek vege, eredmeny kiiras.
	 */
	public void jatekVege() {

		/* Aktualis metodus nevenek kiirasa debug / tesztek celjabol! */
		log("Most a <" + getClass() + "> Osztaly <" + new Throwable().getStackTrace()[0].getMethodName() + "> fuggvenye fut! ");

		/* Ha nyertek */
		if(!mezo.isNyerte()) {
			kiir("jatek_vege_vesztett", "output.txt");
		}
	}

	/**
	 * A jelenlegi jatekallapot kimentese.
	 * @param nev A fajl neve, melybe a mentes kerul.
	 */
	public void jatekmentese(String nev){

		XMLEncoder encoder = null;
		try {
			encoder = new XMLEncoder(new BufferedOutputStream(new FileOutputStream(nev)));
		} catch (FileNotFoundException e) {
			error("mentes_sikertelen " + e);
			kiir("mentes_sikertelen", "output.txt");
		}
		assert encoder != null;
		encoder.writeObject(mezo);
		encoder.close();
		kiir("mentes_sikeres", "output.txt");
	}

	/**
	 * Az elmentett jatekallapot betoltese.
	 * @param nev A fajl neve, melybol a betoltest vegezzuk.
	 * @return Mezo Az elmentett mezo, melyen a jatek zajlott
	 * a mentest megelozoen (ezt toltjuk vissza).
	 */
	public Mezo mezobetolt(String nev){
		Mezo m = null;
		XMLDecoder decoder =
				null;
		try {
			decoder = new XMLDecoder(new BufferedInputStream(
					new FileInputStream(nev)));

			assert decoder != null;
			m = (Mezo)decoder.readObject();
			decoder.close();
			return m;
		} catch (Exception e) {
			error("betoltes_sikertelen " + e);
		}
		return m;
	}
}
